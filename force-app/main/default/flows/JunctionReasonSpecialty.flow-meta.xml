<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>getSpecialtyToInactvateLst</name>
        <label>getSpecialtyToInactvateLst</label>
        <locationX>1085</locationX>
        <locationY>798</locationY>
        <actionName>ReasonFlow_ctr</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>PopulateName</targetReference>
        </connector>
        <inputParameters>
            <name>aSpecialtyIdLst</name>
            <value>
                <elementReference>Collection</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>specialtyToInactvateLst</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>OpenRecord</name>
        <label>Abrir o registro</label>
        <locationX>1900</locationX>
        <locationY>616</locationY>
        <actionName>c:OpenFlow</actionName>
        <actionType>component</actionType>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <assignments>
        <name>AssignNameToSpecialty</name>
        <label>Atribuir nome da especialidade</label>
        <locationX>1418</locationX>
        <locationY>967</locationY>
        <assignmentItems>
            <assignToReference>specialtyNames</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Product2Loop.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>specialtyNames</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <stringValue>[</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>specialtyNames</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <stringValue>]</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>count</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>PopulateName</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignSpecialty</name>
        <label>Atribuir especialidades</label>
        <locationX>1428</locationX>
        <locationY>789</locationY>
        <assignmentItems>
            <assignToReference>Collection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varLoopRecord.SpecialtyDetail__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>count</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateSpecialtiesReason</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>FieldsToUpdate</name>
        <label>Campos para atualizar</label>
        <locationX>1961</locationX>
        <locationY>293</locationY>
        <assignmentItems>
            <assignToReference>GetReasons.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Inativo</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateToInactivated</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>InactiveReason</name>
        <label>Inativar motivo</label>
        <locationX>2559</locationX>
        <locationY>649</locationY>
        <assignmentItems>
            <assignToReference>GetReasons.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Inativo</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>InactiveReasonWithSpecilaty</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>ReasonsActive</name>
        <label>Ativa o Motivo</label>
        <locationX>910</locationX>
        <locationY>1235</locationY>
        <assignmentItems>
            <assignToReference>GetReasons.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Ativo</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateStatusActive</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>ChoiceActive</name>
        <choiceText>Ativar</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Ativar</stringValue>
        </value>
    </choices>
    <choices>
        <name>ChoiceInactive</name>
        <choiceText>Inativar</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Inativar</stringValue>
        </value>
    </choices>
    <choices>
        <name>No</name>
        <choiceText>Não</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>noChoice</elementReference>
        </value>
    </choices>
    <choices>
        <name>Yes</name>
        <choiceText>Sim</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>yesChoice</elementReference>
        </value>
    </choices>
    <decisions>
        <name>CheckActiveJunctions</name>
        <label>Verfica se contém junções ativas</label>
        <locationX>1327</locationX>
        <locationY>355</locationY>
        <defaultConnector>
            <targetReference>ConfirmationScreenInactivate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Não</defaultConnectorLabel>
        <rules>
            <name>ContainsActiveSpecialty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetReasonsSpecialty</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IterateSpecialtiesReason</targetReference>
            </connector>
            <label>Contém especialidade ativa</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckChoice</name>
        <label>Verificar escolha</label>
        <locationX>739</locationX>
        <locationY>1072</locationY>
        <defaultConnector>
            <targetReference>OpenRecord</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Não</defaultConnectorLabel>
        <rules>
            <name>IfYesProceed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ChoiceProceed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Yes</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ReasonsActive</targetReference>
            </connector>
            <label>Se sim</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckChoiceSpecialty</name>
        <label>Verificar escolha</label>
        <locationX>2198</locationX>
        <locationY>827</locationY>
        <defaultConnector>
            <targetReference>OpenRecord</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Não</defaultConnectorLabel>
        <rules>
            <name>IfYesSpecialty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ChoiceProceedSpecialty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Yes</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateSpecialties</targetReference>
            </connector>
            <label>Se sim</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckListSpecialtiesEmpty</name>
        <label>Verificar se a lista de especialidades está vazia</label>
        <locationX>1651</locationX>
        <locationY>1167</locationY>
        <defaultConnector>
            <targetReference>InactiveSpecialty</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Não</defaultConnectorLabel>
        <rules>
            <name>ListIsEmpty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>count</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ConfirmationScreenInactivate</targetReference>
            </connector>
            <label>A lista está vazia?</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckReasonStatus</name>
        <label>Verificar o status do motivo</label>
        <locationX>937</locationX>
        <locationY>406</locationY>
        <defaultConnectorLabel>Não</defaultConnectorLabel>
        <rules>
            <name>IfInDeployment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetReasons.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Em implantação</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>InDeploymentScreen</targetReference>
            </connector>
            <label>Se for em implantação</label>
        </rules>
        <rules>
            <name>IfIsActive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetReasons.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Ativo</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetReasonsSpecialty</targetReference>
            </connector>
            <label>Se for ativo</label>
        </rules>
        <rules>
            <name>IfIsInactive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetReasons.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Inativo</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ConfirmationScreenActivate</targetReference>
            </connector>
            <label>Se for inativo</label>
        </rules>
    </decisions>
    <decisions>
        <name>DecisionProceedStop</name>
        <label>Decisão para Prosseguir ou Parar</label>
        <locationX>1051</locationX>
        <locationY>50</locationY>
        <defaultConnector>
            <targetReference>ConfirmationScreenActivate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Não</defaultConnectorLabel>
        <rules>
            <name>IfWasChoiceInactive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ChoiceActiveInactive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Inativar</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetReasonsSpecialty</targetReference>
            </connector>
            <label>Se foi ecolhido inativar</label>
        </rules>
    </decisions>
    <decisions>
        <name>WantProceed</name>
        <label>Deseja Processeguir?</label>
        <locationX>1790</locationX>
        <locationY>260</locationY>
        <defaultConnector>
            <targetReference>OpenRecord</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Não</defaultConnectorLabel>
        <rules>
            <name>IfYes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Choice</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Yes</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>FieldsToUpdate</targetReference>
            </connector>
            <label>Se sim</label>
        </rules>
    </decisions>
    <interviewLabel>Junção de Motivo e Especialidade {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Ativar/Inativar o Motivo</label>
    <loops>
        <name>IterateSpecialtiesReason</name>
        <label>Iterar as Especialidades vinculadas ao motivo</label>
        <locationX>1429</locationX>
        <locationY>527</locationY>
        <assignNextValueToReference>varLoopRecord</assignNextValueToReference>
        <collectionReference>GetReasonsSpecialty</collectionReference>
        <iterationOrder>Desc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignSpecialty</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>getSpecialtyToInactvateLst</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>PopulateName</name>
        <label>PopulateName</label>
        <locationX>1085</locationX>
        <locationY>1157</locationY>
        <assignNextValueToReference>Product2Loop</assignNextValueToReference>
        <collectionReference>specialtyToInactvateLst</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignNameToSpecialty</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CheckListSpecialtiesEmpty</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>Esse elemento busca o id do motivo que você está tentando inativar ou ativar.</description>
        <name>GetReasons</name>
        <label>Buscar Motivos</label>
        <locationX>500</locationX>
        <locationY>411</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckReasonStatus</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status__c</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>RecordTypeName__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetReasonsSpecialty</name>
        <label>Especialidades do Motivo</label>
        <locationX>1166</locationX>
        <locationY>353</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckActiveJunctions</targetReference>
        </connector>
        <filters>
            <field>Detail__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>SpecialtyDetail__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue/>
            </value>
        </filters>
        <filters>
            <field>SpecialtyStatus__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Ativo</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ServiceSpecialtyDetails__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>InactiveReasonWithSpecilaty</name>
        <label>Inativar motivo</label>
        <locationX>2559</locationX>
        <locationY>490</locationY>
        <connector>
            <targetReference>SuccessUpdate</targetReference>
        </connector>
        <inputReference>GetReasons</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateSpecialties</name>
        <label>Atualizar especialidades</label>
        <locationX>2559</locationX>
        <locationY>834</locationY>
        <connector>
            <targetReference>InactiveReason</targetReference>
        </connector>
        <inputReference>specialtyToInactvateLst</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateStatusActive</name>
        <label>Atualizar status para ativo</label>
        <locationX>2350</locationX>
        <locationY>1237</locationY>
        <connector>
            <targetReference>ScreenSuccessActive</targetReference>
        </connector>
        <inputReference>GetReasons</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateToInactivated</name>
        <label>Atualizar para inativo</label>
        <locationX>2130</locationX>
        <locationY>294</locationY>
        <connector>
            <targetReference>SuccessUpdate</targetReference>
        </connector>
        <inputReference>GetReasons</inputReference>
    </recordUpdates>
    <screens>
        <name>ConfirmationScreenActivate</name>
        <label>Tela de confirmação para ativar</label>
        <locationX>822</locationX>
        <locationY>924</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>CheckChoice</targetReference>
        </connector>
        <fields>
            <name>MessageConfirmation</name>
            <fieldText>&lt;p&gt;Você realmente deseja &lt;b&gt;ativar &lt;/b&gt;esse motivo?&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ChoiceProceed</name>
            <choiceReferences>Yes</choiceReferences>
            <choiceReferences>No</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Escolha</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Tela que irá exibir a mensagem para se a pessoa realmente quer inativar esse registro de motivo.</description>
        <name>ConfirmationScreenInactivate</name>
        <label>Tela de confirmação para inativar</label>
        <locationX>1648</locationX>
        <locationY>351</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>WantProceed</targetReference>
        </connector>
        <fields>
            <name>ConfirmationMessage</name>
            <fieldText>&lt;p&gt;Você realmente deseja &lt;b&gt;inativar&lt;/b&gt; esse motivo?&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Choice</name>
            <choiceReferences>Yes</choiceReferences>
            <choiceReferences>No</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Escolha</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Tela que mostraram as especialidades que serão inativadas.</description>
        <name>InactiveSpecialty</name>
        <label>Inativar especialidade</label>
        <locationX>1993</locationX>
        <locationY>825</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>CheckChoiceSpecialty</targetReference>
        </connector>
        <fields>
            <name>MessageSpecialtyInactive</name>
            <fieldText>&lt;p&gt;As seguintes especialidade só tem esse motivo ativo vinculado a elas:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!specialtyNames}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Caso você inative esse motivo, essas especialidades também serão inativadas.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Deseja prosseguir?&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ChoiceProceedSpecialty</name>
            <choiceReferences>Yes</choiceReferences>
            <choiceReferences>No</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Escolha</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>InDeploymentScreen</name>
        <label>Tela para exibir em implantação</label>
        <locationX>817</locationX>
        <locationY>153</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>DecisionProceedStop</targetReference>
        </connector>
        <fields>
            <name>ChoiceTheStatus</name>
            <fieldText>&lt;p&gt;Escolha o que você deseja fazer, &lt;b&gt;ativar &lt;/b&gt;ou &lt;b&gt;inativar &lt;/b&gt;esse motivo?&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ChoiceActiveInactive</name>
            <choiceReferences>ChoiceActive</choiceReferences>
            <choiceReferences>ChoiceInactive</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Status</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScreenSuccessActive</name>
        <label>Tela de sucesso ativação</label>
        <locationX>2724</locationX>
        <locationY>1236</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>OpenRecord</targetReference>
        </connector>
        <fields>
            <name>ReasonActiveMessage</name>
            <fieldText>&lt;p&gt;O motivo &lt;b&gt;{!GetReasons.Name} &lt;/b&gt;foi ativado com sucesso.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>SuccessUpdate</name>
        <label>Atualizado com Sucesso</label>
        <locationX>2376</locationX>
        <locationY>294</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>OpenRecord</targetReference>
        </connector>
        <fields>
            <name>UpdateMessage</name>
            <fieldText>&lt;p&gt;O motivo &lt;b&gt;{!GetReasons.Name} &lt;/b&gt;foi inativado com sucesso.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>346</locationY>
        <connector>
            <targetReference>GetReasons</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>Collection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>count</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>listOfSpecialtiesToInactvate</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>loopRecordName</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>noChoice</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Não</stringValue>
        </value>
    </variables>
    <variables>
        <name>Product2Loop</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Product2</objectType>
    </variables>
    <variables>
        <name>Product2LoopLst</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Product2</objectType>
    </variables>
    <variables>
        <name>reasonRecordType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>012f0000000S1AzAAK</stringValue>
        </value>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordSpecialtyId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>singleSpecialtyLst</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Product2</objectType>
    </variables>
    <variables>
        <name>specialtyDetailApexReturn</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>ServiceSpecialtyDetails__c</objectType>
    </variables>
    <variables>
        <name>specialtyDetailIds</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>specialtyDetailIdsStep2</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Variavél para armazenar o nome da especialidade</description>
        <name>specialtyDetailName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>specialtyDetailNameStep2</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>specialtyNames</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>specialtyToInactvateLst</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>Product2</objectType>
    </variables>
    <variables>
        <name>specialtyToInactvateSingleTextWhitComa</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SpecialtyToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Product2</objectType>
    </variables>
    <variables>
        <name>varLoopRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ServiceSpecialtyDetails__c</objectType>
    </variables>
    <variables>
        <name>VarLoopText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>yesChoice</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Sim</stringValue>
        </value>
    </variables>
</Flow>
