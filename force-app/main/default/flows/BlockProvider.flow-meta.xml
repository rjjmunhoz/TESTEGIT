<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <name>AddInactiveVehiclesToList</name>
        <label>Adicionar veículos para inativar na lista</label>
        <locationX>3605</locationX>
        <locationY>414</locationY>
        <assignmentItems>
            <assignToReference>lstVehicle</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopToInactiveVehicles</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopToInactiveVehicles</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AddListContacts</name>
        <label>Adicionar Lista de Contatos</label>
        <locationX>3795</locationX>
        <locationY>1242</locationY>
        <assignmentItems>
            <assignToReference>lstContacts</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopObjectContact</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopObjectContact</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AddListVehicle</name>
        <label>Adicionar Lista de Veiculo</label>
        <locationX>4509</locationX>
        <locationY>2046</locationY>
        <assignmentItems>
            <assignToReference>lstVehicle</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopObjectVehicle</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopObjectVehicle</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AddRecordsToList</name>
        <label>Adicionar cada registro a lista</label>
        <locationX>4377</locationX>
        <locationY>494</locationY>
        <assignmentItems>
            <assignToReference>lstContacts</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopToInactiveContacts</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopToInactiveContacts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignActiveValueToStatus</name>
        <label>Atribuir valor Ativo para status</label>
        <locationX>1609</locationX>
        <locationY>2103</locationY>
        <assignmentItems>
            <assignToReference>GetIdProvider.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Ativo</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetIdProvider.Synced__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ActiveScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignInactiveValue</name>
        <label>Atribuir valor inativo</label>
        <locationX>1568</locationX>
        <locationY>604</locationY>
        <assignmentItems>
            <assignToReference>GetIdProvider.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Inativo</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AgreeInactivation</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignInactiveValueToContacts</name>
        <label>Atribuir valor Inativo para o Contatos</label>
        <locationX>4381</locationX>
        <locationY>317</locationY>
        <assignmentItems>
            <assignToReference>LoopToInactiveContacts.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Inativo</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddRecordsToList</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignInactiveValueToVehicles</name>
        <label>Atribuir valor Inativo para Veículos</label>
        <locationX>3606</locationX>
        <locationY>236</locationY>
        <assignmentItems>
            <assignToReference>LoopToInactiveVehicles.VehicleStatus__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Inativo</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddInactiveVehiclesToList</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Estou atribuindo o texto do &quot;Motivo&quot; e o status &quot;Cancelado&quot;.</description>
        <name>AssignReasonStatus</name>
        <label>Atribuir: Motivo e Status</label>
        <locationX>2239</locationX>
        <locationY>1358</locationY>
        <assignmentItems>
            <assignToReference>GetIdProvider.Reason__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ReasonMotivo</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetIdProvider.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Cancelado</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetIdProvider.DateCancelProvider__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CancelDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ProviderCancelMessage</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Estou atribuindo o texto do Motivo, Status &quot;Bloqueado&quot; e a &quot;Data de Bloqueio&quot;.</description>
        <name>AssignReasonStatusDateBlock</name>
        <label>Atribuir: Motivo, Status e a Data de Bloqueio</label>
        <locationX>2243</locationX>
        <locationY>978</locationY>
        <assignmentItems>
            <assignToReference>GetIdProvider.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Bloqueado</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetIdProvider.Reason__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ReasonMotivo</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetIdProvider.ProviderBlockDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>BlockedDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ConfirmarBloqueio</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignValueActivePF</name>
        <label>Atribuir valor ativo para PF</label>
        <locationX>1892</locationX>
        <locationY>2608</locationY>
        <assignmentItems>
            <assignToReference>GetIdProvider.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Ativo</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetAccountPF.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Ativo</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetIdProvider.Synced__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdatePFAccount</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>InactivedBaseEmpolyees</name>
        <label>Inativar Vinculo Colaborador</label>
        <locationX>3915</locationX>
        <locationY>1131</locationY>
        <assignmentItems>
            <assignToReference>LoopObjectContact.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Inativo</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddListContacts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>InactivedLinkVehicle</name>
        <label>Inativar Vinculo Veiculo</label>
        <locationX>4718</locationX>
        <locationY>2046</locationY>
        <assignmentItems>
            <assignToReference>LoopObjectVehicle.VehicleStatus__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Inativo</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddListVehicle</targetReference>
        </connector>
    </assignments>
    <choices>
        <description>Váriavel de escolha para ativar</description>
        <name>OptionButtonActive</name>
        <choiceText>Ativar</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Ativo</stringValue>
        </value>
    </choices>
    <choices>
        <name>OptionButtonBlock</name>
        <choiceText>Bloquear</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Bloqueado</stringValue>
        </value>
    </choices>
    <choices>
        <name>OptionButtonCancel</name>
        <choiceText>Cancelar</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Cancelado</stringValue>
        </value>
    </choices>
    <choices>
        <name>OptionButtonInactive</name>
        <choiceText>Inativar</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Inativo</stringValue>
        </value>
    </choices>
    <decisions>
        <description>Faz a verificação se a consulta de contatos não esta vazia.</description>
        <name>CheckConsultContact</name>
        <label>Verifica Consulta tem Contato</label>
        <locationX>3627</locationX>
        <locationY>1359</locationY>
        <defaultConnector>
            <targetReference>GetIdVehicle</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Resultado padrão</defaultConnectorLabel>
        <rules>
            <name>HasContacts</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetIdBaseEmployees</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LoopObjectContact</targetReference>
            </connector>
            <label>Tem Contatos</label>
        </rules>
    </decisions>
    <decisions>
        <description>Faz a verificação se a consulta de Veiculo não esta vazia.</description>
        <name>CheckConsultHasVehicle</name>
        <label>Verifica Consulta tem Veiculo</label>
        <locationX>4331</locationX>
        <locationY>1811</locationY>
        <defaultConnectorLabel>Resultado padrão</defaultConnectorLabel>
        <rules>
            <name>HasVehicle</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetIdVehicle</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LoopObjectVehicle</targetReference>
            </connector>
            <label>Tem Veiculos</label>
        </rules>
    </decisions>
    <decisions>
        <name>CriteriaStatusAndRecordType</name>
        <label>Criterios: Status e Record Type</label>
        <locationX>830</locationX>
        <locationY>1197</locationY>
        <defaultConnectorLabel>Resultado padrão</defaultConnectorLabel>
        <rules>
            <name>DefinedCriteria</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetIdProvider.RecordType.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>GetRecordeTypeProvider.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>BlockProvider</targetReference>
            </connector>
            <label>Critérios Definidos</label>
        </rules>
    </decisions>
    <decisions>
        <name>DecisionBlockOrCancel</name>
        <label>Decisão Bloquear, Cancelar ou Ativar</label>
        <locationX>1281</locationX>
        <locationY>1198</locationY>
        <defaultConnector>
            <targetReference>ValidationRulesScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Não</defaultConnectorLabel>
        <rules>
            <name>Block</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OptionsButtons</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>OptionButtonBlock</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Ativo</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignReasonStatusDateBlock</targetReference>
            </connector>
            <label>Bloquear</label>
        </rules>
        <rules>
            <name>Cancel</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OptionsButtons</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>OptionButtonCancel</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Cancelado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Em implantação</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignReasonStatus</targetReference>
            </connector>
            <label>Cancelar</label>
        </rules>
        <rules>
            <name>Active</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>OptionsButtons</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>OptionButtonActive</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Em implantação</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bloqueado</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DecisionPFOrPJ</targetReference>
            </connector>
            <label>Ativar</label>
        </rules>
        <rules>
            <name>Inactive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OptionsButtons</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>OptionButtonInactive</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Cancelado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Inativo</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Bloqueado</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignInactiveValue</targetReference>
            </connector>
            <label>Inativar</label>
        </rules>
        <rules>
            <name>ProviderBlock</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bloqueado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OptionsButtons</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>OptionButtonBlock</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ProviderBlockText</targetReference>
            </connector>
            <label>Prestador Bloqueado</label>
        </rules>
        <rules>
            <name>CancelProvider</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cancelado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OptionsButtons</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>OptionButtonCancel</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>TextCancel</targetReference>
            </connector>
            <label>Prestador Cancelado</label>
        </rules>
        <rules>
            <name>ProviderBlockCancelOption</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cancelado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OptionsButtons</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>OptionButtonBlock</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ProviderBlockedForCancel</targetReference>
            </connector>
            <label>Prestador Bloqueado/Cancelado</label>
        </rules>
        <rules>
            <name>AvoidActivatingInactiveCanceledProvider</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>OptionsButtons</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>OptionButtonActive</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Inativo</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cancelado</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NotActiveScreen</targetReference>
            </connector>
            <label>Evitar ativar Prestador Inativo/Cancelado</label>
        </rules>
    </decisions>
    <decisions>
        <name>DecisionPFOrPJ</name>
        <label>Decisão PF ou PJ</label>
        <locationX>1267</locationX>
        <locationY>2110</locationY>
        <defaultConnectorLabel>Resultado padrão</defaultConnectorLabel>
        <rules>
            <name>IsLegalPerson</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetIdProvider.LegalSituation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PJ</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignActiveValueToStatus</targetReference>
            </connector>
            <label>É PJ?</label>
        </rules>
        <rules>
            <name>IsPhysicalPerson</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetIdProvider.LegalSituation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PF</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAccountPF</targetReference>
            </connector>
            <label>É PF?</label>
        </rules>
    </decisions>
    <decisions>
        <name>VerifyFieldContactPF</name>
        <label>Verificar campos do contato PF</label>
        <locationX>1884</locationX>
        <locationY>2377</locationY>
        <defaultConnector>
            <targetReference>AssignValueActivePF</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Resultado padrão</defaultConnectorLabel>
        <rules>
            <name>IfListIsNotEmptyFieldsAreEmpty</name>
            <conditionLogic>1 AND (2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 8 OR 9 OR 10 OR 11 OR 12 OR 13 OR 14 OR 15 OR 16 OR 17 OR 18 OR 19 OR 20 OR 21 OR 22 OR 23 OR 24 OR 25 OR 26 OR 27 OR 28 OR 29 OR 30 OR 31 OR 32 OR 33 OR 34 OR 35 OR 35 OR 36 OR 37 OR 38 OR 39 OR 40 OR 41 OR 42 OR 43 OR 44 OR 45 OR 46 OR 47 OR 48 OR 49 OR 50 OR 51 OR 52 OR 53 OR 54 OR 55 OR 56 OR 57 OR 58)</conditionLogic>
            <conditions>
                <leftValueReference>GetAccountPF</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.MotherName__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.MotherName__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.RG__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.RG__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.IssuingAgency__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.IssuingAgency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Birthdate</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Nationality__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Nationality__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.CNHNumber__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.CNHNumber__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.CNHCategory__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.CNHCategory__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.CNHExpirationDate__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.DateOfFirstCNH__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.MaritalStatus__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.MaritalStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Gender__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Gender__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.EducationLevel__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.EducationLevel__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Email</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.PublicPlace__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.PublicPlace__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Street__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Street__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Number__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Number__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Zip__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Zip__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Neighborhood__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Neighborhood__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.City__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.City__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Uf__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Uf__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Height__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Weight__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Shirt__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Shirt__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Pants__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Pants__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Boot__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Boot__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Jacket__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Jacket__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Knitted__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.Knitted__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.DegreeKinshipPortoEmployee__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.DegreeKinshipPortoEmployee__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.PEP__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.PEP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.MobilePhone</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.MobilePhone</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.HomePhone</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccountPF.HomePhone</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RequiredFields</targetReference>
            </connector>
            <label>Se a lista não estiver vazia e os campos estiverem vazios</label>
        </rules>
    </decisions>
    <decisions>
        <name>VerifyHasContactsToInactive</name>
        <label>Verifica se tem Contatos para inativar</label>
        <locationX>3974</locationX>
        <locationY>606</locationY>
        <defaultConnector>
            <targetReference>GetVehiclesToInactive</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Resultado padrão</defaultConnectorLabel>
        <rules>
            <name>TheListNotIsEmpty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetBaseEmployeesToInactive</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LoopToInactiveContacts</targetReference>
            </connector>
            <label>A lista não esta vazia?</label>
        </rules>
    </decisions>
    <decisions>
        <name>VerifyHasVehiclesToInactive</name>
        <label>Verifica se tem veículos para inativar</label>
        <locationX>3749</locationX>
        <locationY>95</locationY>
        <defaultConnectorLabel>Resultado padrão</defaultConnectorLabel>
        <rules>
            <name>TheListNotIsEmptyVehicle</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetVehiclesToInactive</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LoopToInactiveVehicles</targetReference>
            </connector>
            <label>A lista não está vazia?</label>
        </rules>
    </decisions>
    <formulas>
        <name>BlockedDate</name>
        <dataType>DateTime</dataType>
        <expression>NOW()</expression>
    </formulas>
    <formulas>
        <name>CancelDate</name>
        <dataType>Date</dataType>
        <expression>NOW()</expression>
    </formulas>
    <interviewLabel>Bloquear Prestador {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Ações do Status - Prestador</label>
    <loops>
        <name>LoopObjectContact</name>
        <label>Loop no Objeto de Contatos</label>
        <locationX>3628</locationX>
        <locationY>1104</locationY>
        <collectionReference>GetIdBaseEmployees</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>InactivedBaseEmpolyees</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>InactivedStatusBaseEmployee</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopObjectVehicle</name>
        <label>Loop no Objeto Veiculo</label>
        <locationX>4615</locationX>
        <locationY>1810</locationY>
        <collectionReference>GetIdVehicle</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>InactivedLinkVehicle</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>InactivedStatusVehicleUpdated</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopToInactiveContacts</name>
        <label>Iteração da inativação dos contatos</label>
        <locationX>4151</locationX>
        <locationY>427</locationY>
        <collectionReference>GetBaseEmployeesToInactive</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignInactiveValueToContacts</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateContactsToUpdate</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopToInactiveVehicles</name>
        <label>Iteração da inativação de veículos</label>
        <locationX>3753</locationX>
        <locationY>333</locationY>
        <collectionReference>GetVehiclesToInactive</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignInactiveValueToVehicles</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateVehicleToInactive</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>BaseEmployeesRecordTypeId</name>
        <label>Tipo de registro do Colaborador da Base</label>
        <locationX>3181</locationX>
        <locationY>604</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetBaseEmployeesToInactive</targetReference>
        </connector>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BaseEmployees</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Contact</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetAccountPF</name>
        <label>Obter colaboradores da PF</label>
        <locationX>1616</locationX>
        <locationY>2375</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>VerifyFieldContactPF</targetReference>
        </connector>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetIdProvider.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>CPF__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetIdProvider.CNPJ__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetBaseEmployeesToInactive</name>
        <label>Obter Colaboradores da base para Inativar</label>
        <locationX>3396</locationX>
        <locationY>604</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>VerifyHasContactsToInactive</targetReference>
        </connector>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetIdProvider.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>BaseEmployeesRecordTypeId.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Ativo</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Inativo/Temporário</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetIdBaseEmployees</name>
        <label>Obter Id do Colaborador</label>
        <locationX>3423</locationX>
        <locationY>1357</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckConsultContact</targetReference>
        </connector>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRecordTypeEmployess.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Ativo</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Inativo/Temporário</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetIdProvider</name>
        <label>Obter ID do Prestador</label>
        <locationX>756</locationX>
        <locationY>966</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetRecordeTypeProvider</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status__c</queriedFields>
        <queriedFields>RecordTypeId</queriedFields>
        <queriedFields>Reason__c</queriedFields>
        <queriedFields>LegalSituation__c</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>CNPJ__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetIdVehicle</name>
        <label>Obter ID do Veiculo</label>
        <locationX>4127</locationX>
        <locationY>1809</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckConsultHasVehicle</targetReference>
        </connector>
        <filters>
            <field>Provider__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>VehicleStatus__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Ativo</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Vehicle__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRecordeTypeProvider</name>
        <label>Obter Record Type do Prestador</label>
        <locationX>930</locationX>
        <locationY>966</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CriteriaStatusAndRecordType</targetReference>
        </connector>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Provider</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Account</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRecordTypeEmployess</name>
        <label>Obter Record Type Colaborador</label>
        <locationX>3194</locationX>
        <locationY>1358</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetIdBaseEmployees</targetReference>
        </connector>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BaseEmployees</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Contact</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetVehiclesToInactive</name>
        <label>Obter Veículos para inativar</label>
        <locationX>3987</locationX>
        <locationY>94</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>VerifyHasVehiclesToInactive</targetReference>
        </connector>
        <filters>
            <field>Provider__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetIdProvider.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>VehicleStatus__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Ativo</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Vehicle__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>InactivedStatusBaseEmployee</name>
        <label>Atualiza Status Contato - Inativar</label>
        <locationX>4128</locationX>
        <locationY>1115</locationY>
        <connector>
            <targetReference>GetIdVehicle</targetReference>
        </connector>
        <inputReference>lstContacts</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>InactivedStatusVehicleUpdated</name>
        <label>Atualiza Status Veiculo - Inativar</label>
        <locationX>4919</locationX>
        <locationY>1806</locationY>
        <inputReference>lstVehicle</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>StatusUpdateCancelProvider</name>
        <label>Atualiza Status Prestador - Cancelar</label>
        <locationX>2991</locationX>
        <locationY>1358</locationY>
        <connector>
            <targetReference>GetRecordTypeEmployess</targetReference>
        </connector>
        <inputReference>GetIdProvider</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>StatusUpdateProvider</name>
        <label>Atualiza Status Prestador - Bloquear</label>
        <locationX>2984</locationX>
        <locationY>979</locationY>
        <inputReference>GetIdProvider</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateAccountToActive</name>
        <label>Atualizar conta para ativo</label>
        <locationX>2200</locationX>
        <locationY>2104</locationY>
        <inputReference>GetIdProvider</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateContactsToUpdate</name>
        <label>Atualizar contatos para inativo</label>
        <locationX>4154</locationX>
        <locationY>94</locationY>
        <connector>
            <targetReference>GetVehiclesToInactive</targetReference>
        </connector>
        <inputReference>lstContacts</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdatePFAccount</name>
        <label>Atualizar a conta PF</label>
        <locationX>1892</locationX>
        <locationY>2783</locationY>
        <connector>
            <targetReference>UpdatePFContact</targetReference>
        </connector>
        <inputReference>GetIdProvider</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdatePFContact</name>
        <label>Atualizar o contato PF</label>
        <locationX>1892</locationX>
        <locationY>2962</locationY>
        <inputReference>GetAccountPF</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateProviderToInactive</name>
        <label>Atualizar Prestador para Inativo</label>
        <locationX>2979</locationX>
        <locationY>605</locationY>
        <connector>
            <targetReference>BaseEmployeesRecordTypeId</targetReference>
        </connector>
        <inputReference>GetIdProvider</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateVehicleToInactive</name>
        <label>Atualizar veículos para inativar</label>
        <locationX>3751</locationX>
        <locationY>492</locationY>
        <inputReference>lstVehicle</inputReference>
    </recordUpdates>
    <screens>
        <name>ActiveScreen</name>
        <label>Tela de ativação</label>
        <locationX>1896</locationX>
        <locationY>2104</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>UpdateAccountToActive</targetReference>
        </connector>
        <fields>
            <name>ActiveMessage</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Ao continuar o registro será Ativado.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>AgreeInactivation</name>
        <label>Confirmar inativação</label>
        <locationX>2712</locationX>
        <locationY>603</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>UpdateProviderToInactive</targetReference>
        </connector>
        <fields>
            <name>MessageInactive</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Ao continuar o registro será Inativado.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>BlockProvider</name>
        <label>Seguir com o Bloqueio</label>
        <locationX>1087</locationX>
        <locationY>1194</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>DecisionBlockOrCancel</targetReference>
        </connector>
        <fields>
            <name>ChoiceTextBlock</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Escolha a alteração que será feita no Prestador:&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>OptionsButtons</name>
            <choiceReferences>OptionButtonActive</choiceReferences>
            <choiceReferences>OptionButtonInactive</choiceReferences>
            <choiceReferences>OptionButtonBlock</choiceReferences>
            <choiceReferences>OptionButtonCancel</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Opções</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>ReasonMotivo</name>
            <fieldText>Motivo</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;Este campo deve ser preenchido para seguir com o bloqueio do prestador.&lt;/p&gt;</errorMessage>
                <formulaExpression>ISNULL({!ReasonMotivo}) == false</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>OptionsButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Bloqueado</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>OptionsButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Cancelado</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>OptionsButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>OptionButtonInactive</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ConfirmarBloqueio</name>
        <label>Confirmar Bloqueio</label>
        <locationX>2749</locationX>
        <locationY>978</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>StatusUpdateProvider</targetReference>
        </connector>
        <fields>
            <name>mensagem_confirmacao</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Ao continuar o registro será Bloqueado.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>NotActiveScreen</name>
        <label>Tela para prestador que não pode ser ativo</label>
        <locationX>1446</locationX>
        <locationY>1905</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ActiveErrorMessage</name>
            <fieldText>&lt;p&gt;O prestador &lt;b&gt;{!GetIdProvider.Name}&lt;/b&gt; está &lt;b&gt;{!GetIdProvider.Status__c}&lt;/b&gt;, para ativá-lo novamente clique no botão &lt;b&gt;Reanalisar&lt;/b&gt;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ProviderBlockedForCancel</name>
        <label>Prestador Bloqueado para Cancelar</label>
        <locationX>2962</locationX>
        <locationY>1171</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ProviderWithBlockForCancel</name>
            <fieldText>&lt;p&gt;Não é possível Bloquear um prestador Cancelado.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ProviderBlockText</name>
        <label>Prestador Bloqueado</label>
        <locationX>2751</locationX>
        <locationY>1223</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ExibitionTextBlock</name>
            <fieldText>&lt;p&gt;Não é possível bloquear esse prestador, porque já está Bloqueado.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ProviderCancelMessage</name>
        <label>Cancelar Prestador</label>
        <locationX>2754</locationX>
        <locationY>1356</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>StatusUpdateCancelProvider</targetReference>
        </connector>
        <fields>
            <name>ExibitionMessage</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Ao continuar o registro será Cancelado.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>RequiredFields</name>
        <label>Campos obrigatorios</label>
        <locationX>2203</locationX>
        <locationY>2377</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>MessageFields</name>
            <fieldText>&lt;p&gt;Esse(s) campo(s) estão em branco no contato da conta:&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>MotherName</name>
            <fieldText>&lt;p&gt;Nome da mãe&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.MotherName__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.MotherName__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RG</name>
            <fieldText>&lt;p&gt;RG&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.RG__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.RG__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>IssuingAgency</name>
            <fieldText>&lt;p&gt;Órgão Emissor&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.IssuingAgency__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.IssuingAgency__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Birthdate</name>
            <fieldText>&lt;p&gt;Data de nascimento&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Birthdate</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Nationality</name>
            <fieldText>&lt;p&gt;Naturalidade&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Nationality__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Nationality__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>CNHNumber</name>
            <fieldText>&lt;p&gt;Número CNH&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.CNHNumber__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.CNHNumber__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>CNHCategory</name>
            <fieldText>&lt;p&gt;Categoria de CNH&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.CNHCategory__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.CNHCategory__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>CNHExpirationDate</name>
            <fieldText>&lt;p&gt;Validade CNH&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.CNHExpirationDate__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>DateOfFirstCNH</name>
            <fieldText>&lt;p&gt;Data da primeira CNH&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.DateOfFirstCNH__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>MaritalStatus</name>
            <fieldText>&lt;p&gt;Estado civil&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.MaritalStatus__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.MaritalStatus__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Gender</name>
            <fieldText>&lt;p&gt;Gênero&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Gender__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Gender__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>EducationLevel</name>
            <fieldText>&lt;p&gt;Grau de escolaridade&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.EducationLevel__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.EducationLevel__c</leftValueReference>
                    <operator>EqualTo</operator>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Email</name>
            <fieldText>&lt;p&gt;Email&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Email</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Email</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>PublicPlace</name>
            <fieldText>&lt;p&gt;Tipo de logradouro&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.PublicPlace__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.PublicPlace__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Street</name>
            <fieldText>&lt;p&gt;Rua&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Street__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Street__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Number</name>
            <fieldText>&lt;p&gt;Número&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Number__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Number__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Zip</name>
            <fieldText>&lt;p&gt;CEP&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Zip__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Zip__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Neighborhood</name>
            <fieldText>&lt;p&gt;Bairro&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Neighborhood__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Neighborhood__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>City</name>
            <fieldText>&lt;p&gt;Cidade&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.City__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.City__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Uf</name>
            <fieldText>&lt;p&gt;UF&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Uf__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Uf__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Height</name>
            <fieldText>&lt;p&gt;Altura&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Height__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Weight</name>
            <fieldText>&lt;p&gt;Peso&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Weight__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Shirt</name>
            <fieldText>&lt;p&gt;Camisa&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Shirt__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Shirt__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Pants</name>
            <fieldText>&lt;p&gt;Calça&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Pants__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Pants__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Boot</name>
            <fieldText>&lt;p&gt;Bota&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Boot__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Boot__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Jacket</name>
            <fieldText>&lt;p&gt;Jaqueta&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Jacket__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Jacket__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Knitted</name>
            <fieldText>&lt;p&gt;Malha&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.Knitted__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.Knitted__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>DegreeKinshipPortoEmployee</name>
            <fieldText>&lt;p&gt;Grau de Parentesco Funcionário da Porto&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.DegreeKinshipPortoEmployee__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.DegreeKinshipPortoEmployee__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>PEP</name>
            <fieldText>&lt;p&gt;PEP&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.PEP__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.PEP__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>HomePhoneMessage</name>
            <fieldText>&lt;p&gt;Telefone residencial&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.HomePhone</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccountPF.HomePhone</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>MobilePhone</name>
            <fieldText>&lt;p&gt;Celular&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccountPF.MobilePhone</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>MobilePhone</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>TextCancel</name>
        <label>Prestador Cancelado</label>
        <locationX>2752</locationX>
        <locationY>1083</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>TextCancelHas</name>
            <fieldText>&lt;p&gt;Não é possível cancelar esse prestador, porque já está Cancelado.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ValidationRulesScreen</name>
        <label>Tela para regras de validação</label>
        <locationX>1708</locationX>
        <locationY>1478</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>BlockProviderDifferentActive</name>
            <fieldText>&lt;p&gt;Só é possível alterar o status para &lt;b&gt;Bloqueado &lt;/b&gt;caso o prestador estiver como &lt;b&gt;Ativo&lt;/b&gt;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>OptionsButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>OptionButtonBlock</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Ativo</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>CancelProviderEqualInProgressCancel</name>
            <fieldText>&lt;p&gt;Só é possível alterar o status para &lt;b&gt;Cancelado &lt;/b&gt;caso o prestador esteja como &lt;b&gt;Inativo&lt;/b&gt;, &lt;b&gt;Ativo&lt;/b&gt; ou &lt;b&gt;Bloqueado&lt;/b&gt;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1 AND (2 OR 3)</conditionLogic>
                <conditions>
                    <leftValueReference>OptionsButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>OptionButtonCancel</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Cancelado</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Em implantação</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InactiveMessage</name>
            <fieldText>&lt;p&gt;Só é possível alterar o status para &lt;b&gt;Inativo &lt;/b&gt;caso o prestador esteja &lt;b&gt;Em implantação &lt;/b&gt;ou &lt;b&gt;Ativo&lt;/b&gt;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>OptionsButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>OptionButtonInactive</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Ativo</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Em implantação</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Inativo</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InactiveProviderInactiveMessage</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Não é possível &lt;/span&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Inativar&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt; esse prestador, porque já está &lt;/span&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Inativo&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>OptionsButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>OptionButtonInactive</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetIdProvider.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Inativo</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>356</locationX>
        <locationY>947</locationY>
        <connector>
            <targetReference>GetIdProvider</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>DeveloperName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>GetIdProvider.RecordType.Name</elementReference>
        </value>
    </variables>
    <variables>
        <name>lstContacts</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>lstVehicle</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Vehicle__c</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
